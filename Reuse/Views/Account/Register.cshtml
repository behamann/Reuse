@using Reuse.Models
@model Reuse.Models.RegisterViewModel
@{
    ViewBag.Title = "Registre-se";
}

<div class="row box">
    <div class="8u">
        <h2>@ViewBag.Title</h2>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal col-md-8", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <h4>Criar uma nova conta</h4>
            <h5><em>Campos com * são obrigatórios</em></h5>
            <hr />
            @Html.ValidationSummary(true)
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label required" })
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label required" })
                <div class="col-md-9">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label required" })
                <div class="col-md-9">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.nome, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(m => m.nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.nome, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.endereco, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(m => m.endereco, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.endereco, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.cep, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(m => m.cep, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @Html.ValidationMessageFor(m => m.cep, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.bairro, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(m => m.bairro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.bairro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.telefone, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(m => m.telefone, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @Html.ValidationMessageFor(m => m.telefone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.celular, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(m => m.celular, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @Html.ValidationMessageFor(m => m.celular, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Avatar", new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input type="file" id="imagem" name="upload" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Confirmar" />
                </div>
            </div>
        }
    </div>

    <div class="4u" sstyle="margin-top: 10%;">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
